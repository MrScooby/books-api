generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Authors {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  books     AuthorsBooks[]
}

// TODO: add connected table instead of simple array
model Genres {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  books     Books[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shelves {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  pages     Int
  books     BooksOnShelves[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model Books {
  id        Int              @id @default(autoincrement())
  ISBN      String?
  lcId      Int              @unique
  pages     Int
  rating    Int
  title     String           @unique
  url       String
  genre     Genres?          @relation(fields: [genreId], references: [id])
  genreId   Int?
  shelves   BooksOnShelves[] // TODO: add cascade delete for connected fields
  authors   AuthorsBooks[]
  imgUrl    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model AuthorsBooks {
  book      Books    @relation(fields: [bookId], references: [id])
  bookId    Int
  author    Authors  @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([bookId, authorId])
}

model BooksOnShelves {
  book      Books    @relation(fields: [bookId], references: [id])
  bookId    Int
  shelf     Shelves  @relation(fields: [shelfId], references: [id])
  shelfId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([bookId, shelfId])
}
